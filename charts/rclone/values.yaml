# Default values for rclone.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/simplyzee/kube-rclone
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.52.3"

init:
  image:
    repository: busybox
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.33.1"
  # Create arhive and copy backup files  
  runScript:
    sync.sh: |-
      #!/bin/sh
      date
      cat /root/rclone/rclone.conf > /etc/rclone/rclone.conf
      ls -la /etc/rclone/
      exit
  # mount path    
  persistence: 
  - name: source
    emptyDir: true
    init: true
    initPath: /source
  - name: out
    emptyDir: true
    init: true
    initPath: /out
    containerPath: /out
  - name: rc
    emptyDir: true
    init: true
    initPath: /etc/rclone
    containerPath: /etc/rclone

cfgRclone:
  rclone.cfg: |-
    # your rclone config is managed here.   
    [test-gdrive]
    type = drive
    client_id = 123456.apps.googleusercontent.com
    client_secret = 123456
    scope = drive
    token = {"access_token":"123456","token_type":"Bearer","refresh_token":"123456","expiry":"2021-06-21T13:38:00.577446+03:00"}
    team_drive = 123456

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
